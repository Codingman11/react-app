{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\jesse\\\\Documents\\\\School\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_SYMBOL } from '../actions';\nconst initialState = {\n  sqares: [],\n  playerTurn: true,\n  moves: 0\n};\n\nconst game = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_SYMBOL\":\n      return _objectSpread({}, state, {\n        squares: [action.payload],\n        moves: action.increment\n      });\n\n    case \"SETUP\":\n      return _objectSpread({}, state, {\n        squares: action.squares,\n        playerTurn: true,\n        moves: action.moves\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default game;","map":{"version":3,"sources":["C:/Users/jesse/Documents/School/react-app/src/reducers/gameReducer.js"],"names":["ADD_SYMBOL","initialState","sqares","playerTurn","moves","game","state","action","type","squares","payload","increment"],"mappings":";;;;;;AAAA,SAAQA,UAAR,QAAyB,YAAzB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,UAAU,EAAE,IAFK;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;;AAMA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,YAAL;AACI,+BACOF,KADP;AAEIG,QAAAA,OAAO,EAAE,CAACF,MAAM,CAACG,OAAR,CAFb;AAGIN,QAAAA,KAAK,EAAEG,MAAM,CAACI;AAHlB;;AAKJ,SAAK,OAAL;AACI,+BACOL,KADP;AAEIG,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFpB;AAGIN,QAAAA,UAAU,EAAE,IAHhB;AAIIC,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAJlB;;AAMJ;AACI,aAAOE,KAAP;AAfR;AAiBH,CAlBD;;AAoBA,eAAeD,IAAf","sourcesContent":["import {ADD_SYMBOL} from '../actions';\r\n\r\nconst initialState = {\r\n    sqares: [],\r\n    playerTurn: true,\r\n    moves: 0\r\n}\r\n\r\nconst game = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"ADD_SYMBOL\":\r\n            return {\r\n                ...state,\r\n                squares: [action.payload],\r\n                moves: action.increment\r\n            }\r\n        case \"SETUP\":\r\n            return {\r\n                ...state,\r\n                squares: action.squares,\r\n                playerTurn: true,\r\n                moves: action.moves\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default game;"]},"metadata":{},"sourceType":"module"}