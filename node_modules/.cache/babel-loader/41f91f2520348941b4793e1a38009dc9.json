{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\jesse\\\\Documents\\\\Demo\\\\react-app1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nconst calculateWinner = squares => {\n  const lines = [[0, 1, 2, 3, 4], [5, 6, 7, 8, 9], [10, 11, 12, 13, 14], [15, 16, 17, 18, 19], [20, 21, 22, 23, 24], [0, 5, 10, 15, 20], [1, 6, 11, 16, 21], [2, 7, 12, 17, 22], [3, 8, 13, 18, 23], [4, 9, 14, 19, 24], [0, 6, 12, 18, 24], [4, 8, 12, 16, 20]];\n  console.log([a]);\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 5),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2],\n          d = _lines$i[3],\n          e = _lines$i[4];\n\n    if (squares[a] && squares[b] && squares[c] && squares[d] && squares[e]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n};\n\nexport default calculateWinner;","map":{"version":3,"sources":["C:/Users/jesse/Documents/Demo/react-app1/src/utils/isWinner.js"],"names":["calculateWinner","squares","lines","console","log","a","i","length","b","c","d","e"],"mappings":";;AAAA,MAAMA,eAAe,GAAGC,OAAO,IAAI;AACjC,QAAMC,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAFY,EAGZ,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAHY,EAIZ,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAJY,EAKZ,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,CARY,EASZ,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,CATY,EAUZ,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,CAVY,EAWZ,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,CAXY,EAYZ,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,CAZY,CAAd;AAcAC,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACC,CAAD,CAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAAA,oCACbJ,KAAK,CAACI,CAAD,CADQ;AAAA,UAC9BD,CAD8B;AAAA,UAC3BG,CAD2B;AAAA,UACxBC,CADwB;AAAA,UACrBC,CADqB;AAAA,UAClBC,CADkB;;AAGrC,QAAIV,OAAO,CAACI,CAAD,CAAP,IAAcJ,OAAO,CAACO,CAAD,CAArB,IAA4BP,OAAO,CAACQ,CAAD,CAAnC,IAA0CR,OAAO,CAACS,CAAD,CAAjD,IAAwDT,OAAO,CAACU,CAAD,CAAnE,EAAwE;AACtE,aAAOV,OAAO,CAACI,CAAD,CAAd;AACD;AACF;;AACD,SAAO,IAAP;AACD,CAxBD;;AA0BA,eAAeL,eAAf","sourcesContent":["const calculateWinner = squares => {\r\n  const lines = [\r\n    [0, 1, 2, 3, 4],\r\n    [5, 6, 7, 8, 9],\r\n    [10, 11, 12, 13, 14],\r\n    [15, 16, 17, 18, 19],\r\n    [20, 21, 22, 23, 24],\r\n    [0, 5, 10, 15, 20],\r\n    [1, 6, 11, 16, 21],\r\n    [2, 7, 12, 17, 22],\r\n    [3, 8, 13, 18, 23],\r\n    [4, 9, 14, 19, 24],\r\n    [0, 6, 12, 18, 24],\r\n    [4, 8, 12, 16, 20]\r\n  ];\r\n  console.log([a]);\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c, d, e] = lines[i];\r\n\r\n    if (squares[a] && squares[b] && squares[c] && squares[d] && squares[e]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default calculateWinner;\r\n"]},"metadata":{},"sourceType":"module"}